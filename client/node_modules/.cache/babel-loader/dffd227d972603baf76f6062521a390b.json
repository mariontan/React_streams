{"ast":null,"code":"var _jsxFileName = \"/home/debian/Developer/React/streams/client/src/components/streams/StreamDelete.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Modal from '../modal';\nimport history from '../../history';\nimport { fetchStream } from '../../actions';\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"ui button negative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(\"button\", {\n      className: \"ui button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Cancel\"));\n  }\n\n  renderContent() {\n    if (!this.props.stream) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Delete?\");\n    }\n\n    return \"Are you sure you want to delte the stream with title:\".concat(this.props.stream.title);\n  }\n\n  render() {\n    return React.createElement(Modal, {\n      title: \"Delete Stream\",\n      content: this.renderContent(),\n      actions: this.renderActions(),\n      onDismiss: () => history.push('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n  }\n\n}\n\n;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamDelete);","map":{"version":3,"sources":["/home/debian/Developer/React/streams/client/src/components/streams/StreamDelete.js"],"names":["React","connect","Modal","history","fetchStream","StreamDelete","Component","componentDidMount","props","match","params","id","renderActions","renderContent","stream","title","render","push","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAAQC,WAAR,QAA0B,eAA1B;;AAEA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA0C;AAEzCC,EAAAA,iBAAiB,GAAE;AAClB,SAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACA;;AAEDC,EAAAA,aAAa,GAAE;AACd,WACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EAEC;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,CADD;AAMA;;AACDC,EAAAA,aAAa,GAAE;AACd,QAAG,CAAC,KAAKL,KAAL,CAAWM,MAAf,EAAsB;AACrB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACA;;AACD,0EAA+D,KAAKN,KAAL,CAAWM,MAAX,CAAkBC,KAAjF;AACA;;AACDC,EAAAA,MAAM,GAAE;AAEP,WACC,oBAAC,KAAD;AACC,MAAA,KAAK,EAAC,eADP;AAEC,MAAA,OAAO,EAAE,KAAKH,aAAL,EAFV;AAGC,MAAA,OAAO,EAAE,KAAKD,aAAL,EAHV;AAIC,MAAA,SAAS,EAAE,MAAIT,OAAO,CAACc,IAAR,CAAa,GAAb,CAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAOA;;AA7BwC;;AA8BzC;;AAED,MAAMC,eAAe,GAAC,CAACC,KAAD,EAAQC,QAAR,KAAmB;AACxC,SAAM;AAACN,IAAAA,MAAM,EAAEK,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAT,GAAN;AACA,CAFD;;AAIA,eAAeV,OAAO,CAACiB,eAAD,EAAiB;AAACd,EAAAA;AAAD,CAAjB,CAAP,CAAuCC,YAAvC,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport Modal from '../modal';\nimport history from '../../history'\nimport {fetchStream} from '../../actions'\n\nclass StreamDelete extends React.Component{\n\n\tcomponentDidMount(){\n\t\tthis.props.fetchStream(this.props.match.params.id)\n\t}\n\n\trenderActions(){\n\t\treturn(\n\t\t\t<React.Fragment>\n\t\t\t\t<button className=\"ui button negative\">Delete</button>\n\t\t\t\t<button className=\"ui button\">Cancel</button>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n\trenderContent(){\n\t\tif(!this.props.stream){\n\t\t\treturn <div>Delete?</div>\n\t\t}\n\t\treturn `Are you sure you want to delte the stream with title:${this.props.stream.title}`\n\t}\n\trender(){\n\n\t\treturn (\n\t\t\t<Modal \n\t\t\t\ttitle=\"Delete Stream\" \n\t\t\t\tcontent={this.renderContent()} \n\t\t\t\tactions={this.renderActions()} \n\t\t\t\tonDismiss={()=>history.push('/')}/>\n\t\t)\n\t}\n};\n\nconst mapStateToProps=(state, ownProps)=>{\n\treturn{stream: state.streams[ownProps.match.params.id]}\n}\n\nexport default connect(mapStateToProps,{fetchStream})(StreamDelete)"]},"metadata":{},"sourceType":"module"}