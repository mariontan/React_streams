{"ast":null,"code":"import _defineProperty from \"/home/debian/Developer/React/streams/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport streams from '../apis/streams';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async (dispatch, getState) => {\n  const userId = getState().auth.userId;\n  const response = await streams.post('/streams', _objectSpread({}, formValues, {\n    userId\n  }));\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(\"/streams/\".concat(id));\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(\"/streams/\".concat(id), formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(\"/streams/\".concat(id));\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};","map":{"version":3,"sources":["/home/debian/Developer/React/streams/client/src/actions/index.js"],"names":["streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","response","post","data","fetchStreams","get","fetchStream","id","editStream","put","deleteStream","delete"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,SAAQC,OAAR,EAAgBC,QAAhB,EAAyBC,aAAzB,EACEC,aADF,EACgBC,YADhB,EAEEC,aAFF,EAEgBC,WAFhB,QAEkC,SAFlC;AAIA,OAAO,MAAMC,MAAM,GAAEC,MAAD,IAAU;AAC7B,SAAM;AACLC,IAAAA,IAAI,EAACT,OADA;AAELU,IAAAA,OAAO,EAACF;AAFH,GAAN;AAIA,CALM;AAOP,OAAO,MAAMG,OAAO,GAAC,MAAI;AACxB,SAAM;AACLF,IAAAA,IAAI,EAACR;AADA,GAAN;AAGA,CAJM;AAMP,OAAO,MAAMW,YAAY,GAAIC,UAAD,IAAe,OAAOC,QAAP,EAAgBC,QAAhB,KAA2B;AAAA,QAC9DP,MAD8D,GACpDO,QAAQ,GAAGC,IADyC,CAC9DR,MAD8D;AAErE,QAAMS,QAAQ,GAAG,MAAMlB,OAAO,CAACmB,IAAR,CAAa,UAAb,oBAA6BL,UAA7B;AAAyCL,IAAAA;AAAzC,KAAvB;AACAM,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEP,aAAP;AAAsBQ,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACA,CAJM;AAMP,OAAO,MAAMC,YAAY,GAAC,MAAK,MAAMN,QAAN,IAAgB;AAC9C,QAAMG,QAAQ,GAAG,MAAMlB,OAAO,CAACsB,GAAR,CAAY,UAAZ,CAAvB;AACAP,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEN,aAAP;AAAsBO,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACA,CAHM;AAKP,OAAO,MAAMG,WAAW,GAAEC,EAAD,IAAM,MAAMT,QAAN,IAAgB;AAC9C,QAAMG,QAAQ,GAAG,MAAMlB,OAAO,CAACsB,GAAR,oBAAwBE,EAAxB,EAAvB;AACAT,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEL,YAAP;AAAqBM,IAAAA,OAAO,EAACO,QAAQ,CAACE;AAAtC,GAAD,CAAR;AACA,CAHM;AAKP,OAAO,MAAMK,UAAU,GAAE,CAACD,EAAD,EAAIV,UAAJ,KAAiB,MAAMC,QAAN,IAAgB;AACzD,QAAMG,QAAQ,GAAE,MAAMlB,OAAO,CAAC0B,GAAR,oBAAwBF,EAAxB,GAA6BV,UAA7B,CAAtB;AACAC,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEH,WAAP;AAAoBI,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAtC,GAAD,CAAR;AACA,CAHM;AAKP,OAAO,MAAMO,YAAY,GAAGH,EAAD,IAAM,MAAMT,QAAN,IAAgB;AAChD,QAAMf,OAAO,CAAC4B,MAAR,oBAA2BJ,EAA3B,EAAN;AACAT,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAACJ,aAAN;AAAqBK,IAAAA,OAAO,EAAEa;AAA9B,GAAD,CAAR;AAEA,CAJM","sourcesContent":["import streams from '../apis/streams';\nimport {SIGN_IN,SIGN_OUT,CREATE_STREAM,\n\t\tFETCH_STREAMS,FETCH_STREAM,\n\t\tDELETE_STREAM,EDIT_STREAM} from './types';\n\nexport const signIn=(userId)=>{\n\treturn{\n\t\ttype:SIGN_IN,\n\t\tpayload:userId\n\t};\n};\n\nexport const signOut=()=>{\n\treturn{\n\t\ttype:SIGN_OUT\n\t};\n};\n\nexport const createStream = (formValues)=> async (dispatch,getState)=>{\n\tconst {userId} = getState().auth;\n\tconst response = await streams.post('/streams', {...formValues, userId})\n\tdispatch({type: CREATE_STREAM, payload: response.data} )\n};\n\nexport const fetchStreams=()=> async dispatch=>{\n\tconst response = await streams.get('/streams')\n\tdispatch({type: FETCH_STREAMS, payload: response.data});\n};\n\nexport const fetchStream=(id)=>async dispatch=>{\n\tconst response = await streams.get(`/streams/${id}`)\n\tdispatch({type: FETCH_STREAM, payload:response.data})\n};\n\nexport const editStream =(id,formValues)=>async dispatch=>{\n\tconst response= await streams.put(`/streams/${id}`,formValues);\n\tdispatch({type: EDIT_STREAM, payload: response.data})\n};\n\nexport const deleteStream =(id)=>async dispatch=>{\n\tawait streams.delete(`/streams/${id}`);\n\tdispatch({type:DELETE_STREAM, payload: id});\n\n};"]},"metadata":{},"sourceType":"module"}