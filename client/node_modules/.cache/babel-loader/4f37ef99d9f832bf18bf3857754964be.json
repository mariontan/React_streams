{"ast":null,"code":"var _jsxFileName = \"/home/debian/Developer/React/streams/client/src/components/streams/StreamForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderInput = ({\n      input,\n      label,\n      meta\n    }) => {\n      const className = \"filed\".concat(meta.error && meta.touched ? 'error' : '');\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({}, input, {\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      })), this.renderError(meta));\n    };\n\n    this.onSubmit = formValues => {\n      this.props.onSubmit(formValues);\n    };\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) {\n      return React.createElement(\"div\", {\n        \"className-\": \"ui error message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, error));\n    }\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui form error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"title\",\n      component: this.renderInput,\n      label: \"Enter Titile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"description\",\n      component: this.renderInput,\n      label: \"Enter Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"ui button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n} //gets called each time the user interacts with the form\n\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = 'You must enter a title';\n  }\n\n  if (!formValues.description) {\n    errors.description = 'enter description';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'StreamForm',\n  validate: validate\n})(StreamForm);","map":{"version":3,"sources":["/home/debian/Developer/React/streams/client/src/components/streams/StreamForm.js"],"names":["React","Field","reduxForm","StreamForm","Component","renderInput","input","label","meta","className","error","touched","renderError","onSubmit","formValues","props","render","handleSubmit","validate","errors","title","description","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,YAA/B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAwC;AAAA;AAAA;;AAAA,SAUvCC,WAVuC,GAU3B,CAAC;AAACC,MAAAA,KAAD;AAAOC,MAAAA,KAAP;AAAcC,MAAAA;AAAd,KAAD,KAAuB;AAClC,YAAMC,SAAS,kBAAUD,IAAI,CAACE,KAAL,IAAcF,IAAI,CAACG,OAAnB,GAA6B,OAA7B,GAAqC,EAA/C,CAAf;AACA,aACC;AAAK,QAAA,SAAS,EAAEF,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQF,KAAR,CADD,EAEC,+CAAWD,KAAX;AAAkB,QAAA,YAAY,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFD,EAGE,KAAKM,WAAL,CAAiBJ,IAAjB,CAHF,CADD;AAOA,KAnBsC;;AAAA,SAoBvCK,QApBuC,GAoB7BC,UAAD,IAAc;AACtB,WAAKC,KAAL,CAAWF,QAAX,CAAoBC,UAApB;AACA,KAtBsC;AAAA;;AACvCF,EAAAA,WAAW,CAAC;AAACF,IAAAA,KAAD;AAAOC,IAAAA;AAAP,GAAD,EAAiB;AAC3B,QAAGA,OAAO,IAAID,KAAd,EAAoB;AACnB,aACC;AAAK,sBAAW,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBA,KAAzB,CADD,CADD;AAKA;AACD;;AAcDM,EAAAA,MAAM,GAAE;AACP,WACC;AAAM,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,YAAX,CAAwB,KAAKJ,QAA7B,CAAhB;AAAwD,MAAA,SAAS,EAAC,eAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,OAAb;AAAqB,MAAA,SAAS,EAAE,KAAKR,WAArC;AAAkD,MAAA,KAAK,EAAC,cAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,aAAb;AAA0B,MAAA,SAAS,EAAE,KAAKA,WAA1C;AAAuD,MAAA,KAAK,EAAC,mBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGC;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD,CADD;AAOA;;AA/BsC,C,CAiCxC;;;AACA,MAAMa,QAAQ,GAAGJ,UAAD,IAAc;AAC7B,QAAMK,MAAM,GAAE,EAAd;;AAEA,MAAG,CAACL,UAAU,CAACM,KAAf,EAAqB;AACpBD,IAAAA,MAAM,CAACC,KAAP,GAAe,wBAAf;AACA;;AACD,MAAG,CAACN,UAAU,CAACO,WAAf,EAA2B;AAC1BF,IAAAA,MAAM,CAACE,WAAP,GAAmB,mBAAnB;AACA;;AACD,SAAOF,MAAP;AACA,CAVD;;AAaA,eAAejB,SAAS,CAAC;AACxBoB,EAAAA,IAAI,EAAE,YADkB;AAExBJ,EAAAA,QAAQ,EAAEA;AAFc,CAAD,CAAT,CAGZf,UAHY,CAAf","sourcesContent":["import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\n\nclass StreamForm extends React.Component{\n\trenderError({error,touched}){\n\t\tif(touched && error){\n\t\t\treturn(\n\t\t\t\t<div className-=\"ui error message\">\n\t\t\t\t\t<div className=\"header\">{error}</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\trenderInput=({input,label, meta})=>{\n\t\tconst className= `filed${meta.error && meta.touched ? 'error':''}`;\n\t\treturn (\n\t\t\t<div className={className}>\n\t\t\t\t<label>{label}</label>\n\t\t\t\t<input {...input} autoComplete=\"off\"/>\n\t\t\t\t{this.renderError(meta)}\n\t\t\t</div>\n\t\t);\n\t}\n\tonSubmit=(formValues)=>{\n\t\tthis.props.onSubmit(formValues);\n\t}\n\trender(){\n\t\treturn(\n\t\t\t<form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\n\t\t\t\t<Field name =\"title\" component={this.renderInput} label=\"Enter Titile\"/>\n\t\t\t\t<Field name =\"description\"component={this.renderInput} label=\"Enter Description\"/>\n\t\t\t\t<button className=\"ui button primary\">Submit</button>\n\t\t\t</form>\n\t\t);\n\t}\n}\n//gets called each time the user interacts with the form\nconst validate =(formValues)=>{\n\tconst errors ={};\n\n\tif(!formValues.title){\n\t\terrors.title = 'You must enter a title';\n\t}\n\tif(!formValues.description){\n\t\terrors.description='enter description'\n\t}\n\treturn errors;\n};\n\n\nexport default reduxForm({\n\tform: 'StreamForm',\n\tvalidate: validate\n})(StreamForm);\n\n"]},"metadata":{},"sourceType":"module"}