{"ast":null,"code":"var _jsxFileName = \"/home/debian/Developer/React/streams/client/src/components/streams/StreamShow.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamShow extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    const _this$props$streams = this.props.streams,\n          title = _this$props$streams.title,\n          description = _this$props$streams.description;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, title), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, description));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(null, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["/home/debian/Developer/React/streams/client/src/components/streams/StreamShow.js"],"names":["React","connect","fetchStream","StreamShow","Component","componentDidMount","props","match","params","id","render","stream","streams","title","description","mapStateToProps","state","ownProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,eAA1B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAwC;AACvCC,EAAAA,iBAAiB,GAAE;AAClB,SAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACA;;AACDC,EAAAA,MAAM,GAAE;AACP,QAAG,CAAC,KAAKJ,KAAL,CAAWK,MAAf,EAAsB;AACrB,aAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAN;AACA;;AAHM,gCAKqB,KAAKL,KAAL,CAAWM,OALhC;AAAA,UAKAC,KALA,uBAKAA,KALA;AAAA,UAKOC,WALP,uBAKOA,WALP;AAOP,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAL,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,WAAL,CAFD,CADD;AAMA;;AAjBsC;;AAoBxC,MAAMC,eAAe,GAAC,CAACC,KAAD,EAAOC,QAAP,KAAkB;AACvC,SAAO;AAACN,IAAAA,MAAM,EAAEK,KAAK,CAACJ,OAAN,CAAcK,QAAQ,CAACV,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAT,GAAP;AACA,CAFD;;AAIA,eAAeR,OAAO,CAAC,IAAD,EAAM;AAACC,EAAAA;AAAD,CAAN,CAAP,CAA4BC,UAA5B,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {fetchStream} from '../../actions';\n\nclass StreamShow extends React.Component{\n\tcomponentDidMount(){\n\t\tthis.props.fetchStream(this.props.match.params.id)\n\t}\n\trender(){\n\t\tif(!this.props.stream){\n\t\t\treturn<div>Loading...</div>\n\t\t}\n\n\t\tconst {title, description}= this.props.streams;\n\n\t\treturn (\n\t\t\t<div> \n\t\t\t\t<h1>{title}</h1>\n\t\t\t\t<h5>{description}</h5>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps=(state,ownProps)=>{\n\treturn {stream: state.streams[ownProps.match.params.id]}\n}\n\nexport default connect(null,{fetchStream})(StreamShow);\n"]},"metadata":{},"sourceType":"module"}