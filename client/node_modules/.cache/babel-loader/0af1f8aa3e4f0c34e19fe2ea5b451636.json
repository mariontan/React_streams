{"ast":null,"code":"import _defineProperty from \"/home/debian/Developer/React/streams/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SIGN_IN, SIGN_OUT } from '../actions/types';\nconst INITIAL_STATE = {\n  isSignedIn: null\n};\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SIGN_IN:\n      return _objectSpread({}, state, {\n        isSignedIn: true\n      });\n\n    case SIGN_OUT:\n      return _objectSpread({}, state, {\n        isSignedIn: false\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/debian/Developer/React/streams/client/src/reducers/authReducer.js"],"names":["SIGN_IN","SIGN_OUT","INITIAL_STATE","isSignedIn","state","action","type"],"mappings":";;;;;;AAAA,SAAQA,OAAR,EAAgBC,QAAhB,QAA+B,kBAA/B;AAEA,MAAMC,aAAa,GAAC;AACnBC,EAAAA,UAAU,EAAC;AADQ,CAApB;AAIA,gBAAe,CAACC,KAAK,GAAEF,aAAR,EAAsBG,MAAtB,KAA+B;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACC,SAAKN,OAAL;AACC,+BAAWI,KAAX;AAAkBD,QAAAA,UAAU,EAAE;AAA9B;;AACD,SAAKF,QAAL;AACC,+BAAWG,KAAX;AAAkBD,QAAAA,UAAU,EAAC;AAA7B;;AACD;AACC,aAAOC,KAAP;AANF;AAQA,CATD","sourcesContent":["import {SIGN_IN,SIGN_OUT} from '../actions/types';\n\nconst INITIAL_STATE={\n\tisSignedIn:null\n};\n\nexport default (state =INITIAL_STATE,action)=>{\n\tswitch(action.type){\n\t\tcase SIGN_IN:\n\t\t\treturn {...state, isSignedIn: true };\n\t\tcase SIGN_OUT:\n\t\t\treturn {...state, isSignedIn:false};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};"]},"metadata":{},"sourceType":"module"}