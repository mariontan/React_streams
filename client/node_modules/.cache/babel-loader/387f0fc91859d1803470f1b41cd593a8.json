{"ast":null,"code":"import streams from '../apis/streams';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async dispatch => {\n  const response = await streams.post('/streams', formValues);\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(\"/streams/\".concat(id));\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formVAlues) => async dispatch => {\n  const response = await streams.put(\"/streams/\".concat(id), formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(\"/streams/\".concat(id));\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};","map":{"version":3,"sources":["/home/debian/Developer/React/streams/client/src/actions/index.js"],"names":["streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","response","post","data","fetchStreams","get","fetchStream","id","editStream","formVAlues","put","deleteStream","delete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,SAAQC,OAAR,EAAgBC,QAAhB,EAAyBC,aAAzB,EACEC,aADF,EACgBC,YADhB,EAEEC,aAFF,EAEgBC,WAFhB,QAEkC,SAFlC;AAIA,OAAO,MAAMC,MAAM,GAAEC,MAAD,IAAU;AAC7B,SAAM;AACLC,IAAAA,IAAI,EAACT,OADA;AAELU,IAAAA,OAAO,EAACF;AAFH,GAAN;AAIA,CALM;AAOP,OAAO,MAAMG,OAAO,GAAC,MAAI;AACxB,SAAM;AACLF,IAAAA,IAAI,EAACR;AADA,GAAN;AAGA,CAJM;AAMP,OAAO,MAAMW,YAAY,GAAIC,UAAD,IAAe,MAAMC,QAAN,IAAgB;AAC1D,QAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACiB,IAAR,CAAa,UAAb,EAAyBH,UAAzB,CAAvB;AACAC,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEP,aAAP;AAAsBQ,IAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACA,CAHM;AAKP,OAAO,MAAMC,YAAY,GAAC,MAAK,MAAMJ,QAAN,IAAgB;AAC9C,QAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACoB,GAAR,CAAY,UAAZ,CAAvB;AACAL,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEL,YAAP;AAAqBM,IAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAvC,GAAD,CAAR;AACA,CAHM;AAIP,OAAO,MAAMG,WAAW,GAAEC,EAAD,IAAM,MAAMP,QAAN,IAAgB;AAC9C,QAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACoB,GAAR,oBAAwBE,EAAxB,EAAvB;AACAP,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEL,YAAP;AAAqBM,IAAAA,OAAO,EAACK,QAAQ,CAACE;AAAtC,GAAD,CAAR;AACA,CAHM;AAIP,OAAO,MAAMK,UAAU,GAAE,CAACD,EAAD,EAAIE,UAAJ,KAAiB,MAAMT,QAAN,IAAgB;AACzD,QAAMC,QAAQ,GAAE,MAAMhB,OAAO,CAACyB,GAAR,oBAAwBH,EAAxB,GAA6BR,UAA7B,CAAtB;AACAC,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEH,WAAP;AAAoBI,IAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAtC,GAAD,CAAR;AACA,CAHM;AAIP,OAAO,MAAMQ,YAAY,GAAGJ,EAAD,IAAM,MAAMP,QAAN,IAAgB;AAChD,QAAMf,OAAO,CAAC2B,MAAR,oBAA2BL,EAA3B,EAAN;AACAP,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAACJ,aAAN;AAAqBK,IAAAA,OAAO,EAAEW;AAA9B,GAAD,CAAR;AAEA,CAJM","sourcesContent":["import streams from '../apis/streams';\nimport {SIGN_IN,SIGN_OUT,CREATE_STREAM,\n\t\tFETCH_STREAMS,FETCH_STREAM,\n\t\tDELETE_STREAM,EDIT_STREAM} from './types';\n\nexport const signIn=(userId)=>{\n\treturn{\n\t\ttype:SIGN_IN,\n\t\tpayload:userId\n\t};\n};\n\nexport const signOut=()=>{\n\treturn{\n\t\ttype:SIGN_OUT\n\t};\n};\n\nexport const createStream = (formValues)=> async dispatch=>{\n\tconst response = await streams.post('/streams', formValues)\n\tdispatch({type: CREATE_STREAM, payload: response.data} )\n};\n\nexport const fetchStreams=()=> async dispatch=>{\n\tconst response = await streams.get('/streams')\n\tdispatch({type: FETCH_STREAM, payload: response.data});\n}\nexport const fetchStream=(id)=>async dispatch=>{\n\tconst response = await streams.get(`/streams/${id}`)\n\tdispatch({type: FETCH_STREAM, payload:response.data})\n}\nexport const editStream =(id,formVAlues)=>async dispatch=>{\n\tconst response= await streams.put(`/streams/${id}`,formValues);\n\tdispatch({type: EDIT_STREAM, payload: response.data})\n}\nexport const deleteStream =(id)=>async dispatch=>{\n\tawait streams.delete(`/streams/${id}`);\n\tdispatch({type:DELETE_STREAM, payload: id});\n\n}"]},"metadata":{},"sourceType":"module"}